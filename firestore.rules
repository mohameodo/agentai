rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users - Very permissive for authenticated users
    match /users/{userId} {
      allow read, write, create, update, delete: if request.auth != null && request.auth.uid == userId;
      // Allow more fields to be updated
      allow update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Agents - Very permissive
    match /agents/{agentId} {
      // Anyone can read public agents (including unauthenticated users)
      allow read: if resource.data.is_public == true || 
                     resource.data.is_curated == true ||
                     resource.data.creator_id == "system";
      // Authenticated users can do anything with agents
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // Chats - Very permissive for authenticated users
    match /chats/{chatId} {
      // Authenticated users can do anything with any chat they have access to
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // Messages - Very permissive for authenticated users
    match /messages/{messageId} {
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // Chat attachments - Very permissive for authenticated users
    match /chat_attachments/{attachmentId} {
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // User keys - Very permissive for authenticated users
    match /user_keys/{keyId} {
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // Feedback - Very permissive for authenticated users
    match /feedback/{feedbackId} {
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // User preferences - Very permissive for authenticated users
    match /user_preferences/{userId} {
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // Allow authenticated users access to any collection
    match /{document=**} {
      allow read, write, create, update, delete: if request.auth != null;
    }
  }
}
