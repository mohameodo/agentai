rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and update their own profile and preferences
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Allow real-time updates to preferences and model settings
      allow update: if request.auth != null && 
                   request.auth.uid == userId &&
                   (request.resource.data.keys().hasOnly(['preferences', 'model_preference', 'updated_at']) ||
                    request.resource.data.keys().hasOnly(['preferences', 'updated_at']) ||
                    request.resource.data.keys().hasOnly(['model_preference', 'updated_at']));
    }
    
    // Agents - More permissive for authenticated users
    match /agents/{agentId} {
      // Anyone can read public or curated agents (including unauthenticated users)
      allow read: if resource.data.is_public == true || 
                     resource.data.is_curated == true ||
                     resource.data.creator_id == "system";
      // Authenticated users can read ANY agent and do most operations
      allow read, create, update, delete: if request.auth != null;
    }
    
    // Chats - authenticated users have full access to their own chats
    match /chats/{chatId} {
      // Authenticated users can do anything with their own chats
      allow read, write, create, update, delete: if request.auth != null && 
                   (resource.data.user_id == request.auth.uid || 
                    request.resource.data.user_id == request.auth.uid);
      
      // Allow real-time updates to chat model and preferences
      allow update: if request.auth != null && 
                   request.auth.uid == resource.data.user_id &&
                   (request.resource.data.keys().hasOnly(['model', 'updated_at']) ||
                    request.resource.data.keys().hasOnly(['preferences', 'updated_at']));
    }
    
    // Messages - authenticated users have full access to their chat messages
    match /messages/{messageId} {
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // Chat attachments - authenticated users have full access
    match /chat_attachments/{attachmentId} {
      allow read, write, create, update, delete: if request.auth != null;
    }
    
    // User keys - users can only access their own API keys
    match /user_keys/{keyId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.user_id;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
    }
    
    // Feedback - users can create feedback with their own user_id
    match /feedback/{feedbackId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
      // Admin-only read access (you'd need to implement admin claims)
      allow read: if request.auth != null && request.auth.token.admin == true;
    }
    
    // User preferences - real-time sync collection (optional separate collection)
    match /user_preferences/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }
  }
}
